/*
 * Copyright (c) 2018. Real Time Genomics Limited.
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.rtg.position.output;

/**
 * Common code used for output.
 */
public final class Utility {

  private Utility() { }  //prevent instantiation

  /**
   * Produce a string that formats an e-value as close as possible to
   * that generated by BLAST.
   * @param evalue to be formatted.
   * @return the formatted string.
   */
  public static String eFormat(final double evalue) {
    final String fmt;
    if (evalue < 1.0e-180) {
      return "0.0";
    }
    if (evalue < 1.0e-99) {
      fmt = "%1$2.0e"; //"%2.0le"
      final String str = String.format(fmt, evalue);
      return str.substring(1); /* Knock off digit. */
    }
    if (evalue < 0.0009) {
      fmt = "%1$3.0e"; //"%3.0le"
    } else if (evalue < 0.1) {
      fmt = "%1$4.3f"; //"%4.3lf"
    } else if (evalue < 1.0) {
      fmt = "%1$3.2f"; //"%3.2lf"
    } else if (evalue < 10.0) {
      fmt = "%1$2.1f"; //"%2.1lf"
    } else {
      fmt = "%1$1.0f"; //"%5.0lf"
    }
    return String.format(fmt, evalue);
  }

}
