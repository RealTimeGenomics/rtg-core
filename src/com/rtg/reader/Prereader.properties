#
# Strings used in the prereader.

# Command line arguments -- these should probably not be changed in locale
# specific files
APPLICATION_NAME = SDFormatter
PROTEIN_FLAG = protein
OUTPUT_FLAG = output
FOUTPUT_FLAG = output
FINPUT_FLAG = input
FORMAT_FLAG = format
PROGRESS_FLAG = progress
INCLUDE_FLAG = include
EXCLUDE_FLAG = exclude
CHUNKS_FLAG = Xchunks
LINE_FLAG = line-length
DUST_FLAG = duster
LEFT_FILE_FLAG = left
RIGHT_FILE_FLAG = right
# Formats

FORMAT_FASTA = fasta
FORMAT_FASTQ = fastq
FORMAT_CGFASTQ = cgfastq
FORMAT_SOLEXA = solexa
FORMAT_SOLEXA1_3=illumina
FORMAT_EMBL = embl
FORMAT_GENBANK = gbk

# Short strings providing "type" information for command line parameters

FILE_SIZE_TYPE = size
DIRECTORY = dir
FILE = file
STRING_TYPE = string
FORMAT_TYPE = format

# Descriptions of command line parameters

FILE_SIZE_DESC = maximum individual file size (in bytes) to write. The specified value should be at least 100. This option understands the suffices K, M, G, T, and i; thus 100Mi corresponds to a chunk size of 100 power-of-2 megabytes

PROTEIN_DESC = input is protein. If this option is not specified, then the input is assumed to consist of nucleotides

OUTPUT_DESC = directory into which the results of the format are to be written. An error will occur if this directory already exists or cannot be created

INPUT_DESC = input sequence files

PROGRESS_DESC = report progress

FORMAT_DESC = format of input

QUALITY_DESC = format of quality data for fastq files (use sanger for Illumina 1.8+)

DUST_DESC = treat lower case residues as unknowns

EXCLUDE_DESC = exclude input sequences based on their name. If the input sequence contains the specified string then that sequence is excluded from the SDF

# WARNING: Do not edit the PROGRAM_DESC property manually in this file. It
# is automatically generated via cartesian/manual/Makefile

PROGRAM_DESC = The "format" module is used to convert a dataset into a form suitable for use with the other SLIM modules.  It takes one or more input files or directories and constructs a directory containing a SLIM formatted version of the input.  The resulting directory can then be used as input to other modules in the SLIM suite.  It should not be necessary to directly examine the contents of the resulting directory.\n\nA typical invocation, to format a DNA sequence is:\n\n"slim format -o mydataset mydna.fa"\n\nand for protein is:\n\n"slim format -p -o mydataset myprotein.fa"\n\nThe required "-o" (or "--output") flag specifies where the output is to be written. An error occurs if the output directory already exists.  At present, "format" can accept sequence data in "fasta" or "fastq" format. If "-p" (or "--protein") is specified, then the input is assumed to be amino acids, otherwise it is treated as nucleotides.  When specifying directories as input, it is possible using the "--include" flag to specify the file extensions to be accepted.  This is useful when the input directories contain other files not containing sequence data.\n\nSometimes it is desirable to remove all the sequences containing given names from the input.  This might be the case when you the input files are large and difficult to edit in another way.  For example, the following "format" will remove all sequences containing "sapiens" or "melanogaster" as part of the name:\n\n"slim format --exclude=sapiens --exclude=melanogaster -o mydataset mydna.fa"\n\nThe following actions are taken on unexpected input:\n\n  * If the sequence name is empty, a warning is generated and the sequence name is set to "Unnamed_sequence_n" where n starts from 0 and increments for each unnamed sequences. \n\n  * When processing nucleotides, "U" is silently identified with "T".\n\n  * Unexpected residues cause a warning to be produced.  This is done for the first few such residues and then a final warning is produced reporting the total number of such residues. All unexpected residues are treated as unknowns ("N" for DNA and "X" for protein).\n\n  * Amino acid codes "B" and "Z" are silently treated as "X" in protein sequences.\n\n  * Lower case residues are treated same as upper case unless the "--duster" option is given for forces lower case residues to be treated as unknowns.  This mechanism is useful for removing low-complexity repeats from the dataset.\n\n  * Warnings are generated for inaccessible input files.  Processing continues with the next specified file.\n\n\nInternally "format" tries hard to make sure its individual files do not exceed operating system limits, and has been tested on individual input sources containing over a terabyte worth of sequence data.\n\nNote: Most SLIM modules require all input sequences to be formatted using the "format" module.
